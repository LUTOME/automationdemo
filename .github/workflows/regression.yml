name: 🧪Pipeline Regression

run-name: ${{ github.actor }}👨🏻‍🔬 triggered Regression on ${{ github.ref_name }}

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
    branches:
    - dev # PRs hacia dev (feature -> dev)
    - main # PRs hacia main (dev -> main)
  push:
    branches:
    - dev # opcional: para auto-PR dev -> main
  workflow_dispatch:


permissions:
  contents: write
  pull-requests: write

concurrency:
  group: regression-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  RegressionTesting:
    name: regression (${{ matrix.os }} / ${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          browser: chrome
        - os: windows-latest # Edge estable en Windows
          browser: edge
    runs-on: ${{ matrix.os }}

    steps:
    - name: 💻 Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 💿 Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: 🍙 Bun Setup
      uses: oven-sh/setup-bun@v1

    - name: 🧬 Install All Dependencies
      run: bun install

    - name: 🧪 Cypress E2E Regression on ${{ matrix.browser }}
      uses: cypress-io/github-action@v4
      with:
        browser: ${{ matrix.browser }}
        command: bun run regression:${{ matrix.browser }}

    - name: 📬 Generate JUnit/Mocha Report for ${{ matrix.browser }}
      if: always()
      run: bun run ${{ matrix.browser }}:report

    - name: 📊 Upload Artifact ${{ matrix.browser }} Mochawesome Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: regression-${{ matrix.browser }}-mocha-report
        path: cypress/tests_reports/${{ matrix.browser }}_mocha_report
        retention-days: 15

  Create-PullRequest:
    # Solo cuando el disparador fue "push" a dev y pasó la regresión
    if: ${{ github.event_name == 'push' && github.ref_name == 'dev' }}
    needs: [ RegressionTesting ]
    runs-on: ubuntu-latest
    steps:
    - name: 💻 Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🧬 Check for changes vs main
      id: changes
      run: |
        git fetch origin main
        if git diff --quiet HEAD origin/main; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: 🔎 Skip if PR already exists
      if: steps.changes.outputs.changes == 'true'
      id: existing
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const prs = await github.rest.pulls.list({
            owner, repo, state: 'open', base: 'main', head: `${owner}:dev`
          });
          core.setOutput('exists', prs.data.length > 0 ? 'true' : 'false');

    - name: 📦️ Create Pull Request dev -> main
      if: steps.changes.outputs.changes == 'true' && steps.existing.outputs.exists != 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const result = await github.rest.pulls.create({
            owner, repo,
            base: 'main',
            head: 'dev',
            title: '✅[QA REGRESSION PASSED]: Ready to Merge into MAIN',
            body: [
              'Update branch by Automation Pipeline',
              '- (CI) Build/Test execution finished ✅',
              '- (CI) Integration-Regression report attached ✅',
              '- (TestResults) No conflicts vs main ✅'
            ].join('\n')
          });
          await github.rest.issues.addLabels({
            owner, repo,
            issue_number: result.data.number,
            labels: ['autoPullRequest']
          });

  AutoMerge-into-Main:
    if: ${{ github.event_name == 'push' && github.ref_name == 'dev' }}
    needs: [ Create-PullRequest ]
    runs-on: ubuntu-latest
    steps:
    - name: 🧬 Merge QA -> MAIN
      uses: devmasx/merge-branch@master
      with:
        type: now
        label_name: 'autoPullRequest'
        target_branch: 'main'
        github_token: ${{ secrets.GITHUB_TOKEN }}
